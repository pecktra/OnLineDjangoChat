用户端：
1、用户是否登录
URL：/api/users/is_logged_in
Method：get
Body:
	{

	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"user_info":
							{
								uid:string,
								status: bool,登录为true
								uname:string,未登录返回 游客,
								coin_num:int 钻石数量，没有是0
							}
					
				   }
		}
	error:
		{
			"code":1
		}

2、退出登录
URL：/api/users/login_out
Method：get
Body:
	{

	}
Response:
	Success：
		{
			"code":0,
		}
	error:
		{
			"code":1
		}
		
3、获取正在直播的直播间列表 （有改动）
URL：/api/live/get_all_lives
Method：get
Body:
	{
        search_tag （传入标签会搜索正在直播的房间 不传则为全部）
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"lives_info":
							{room_id:string 房间id,room_name:string 房间名称, uid:string 主播id,username:string 主播名,live_num int 直播间观看人数,character_name:string 角色名称,character_date:string 角色创建时间,image_name：string 图片名称,image_path：string 图片路径,"tags": [] 标签,"room_info":{"title":string,"coin_num":int,"describe":string,"room_type":int}},
							{room_id:string 房间id,room_name:string 房间名称, uid:string 主播id,username:string 主播名,live_num int 直播间观看人数,character_name:string 角色名称,character_date:string 角色创建时间,image_name：string 图片名称,image_path：string 图片路径,"tags": [] 标签,"room_info":{"title":string,"coin_num":int,"describe":string,"room_type":int}},
				   }
		}
	error:
		{
			"code":1
		}

获取正在直播的直播间列表 （首页左侧的接口 加入了一个简易的算法  实现活跃直播间排序）
URL：/api/live/get_ranked_lives/
Method：get
Body:
	{

	}
Response:
	{
    "code": 0,
    "status": "success",
    "data": {
        "lives_info": [
            {
                "room_id": "4cff21a28f2c0961",
                "room_name": "Baib646cTSWNl-g5i_4wcQ_Kotohime_2025-9-16 @21h 19m 03s 522ms",
                "uid": "Baib646cTSWNl-g5i_4wcQ",
                "username": "pride88",
                "live_num": 0,
                "character_name": "Kotohime",
                "character_date": "2025-9-16 @21h 19m 03s 522ms",
                "image_name": "Kotohime16",
                "image_path": "pride-88/characters/Kotohime16.png",
                "tags": [],
                "language": "en",
                "room_info": {
                    "title": "",
                    "describe": "",
                    "coin_num": 0,
                    "room_type": 0
                },
                "last_ai_reply": "September 21, 2025 3:33pm",
                "ai_reply_count": 2,
                "score": 3.0
            },
            {
                "room_id": "7518230429fdfddf",
                "room_name": "T6j7sWGeR-y2fpeIjEJggQ_Seraphina_2023-5-12 @21h 32m 29s 228ms",
                "uid": "T6j7sWGeR-y2fpeIjEJggQ",
                "username": "任性",
                "live_num": 0,
                "character_name": "Seraphina",
                "character_date": "2023-5-12 @21h 32m 29s 228ms",
                "image_name": "",
                "image_path": "",
                "tags": [],
                "language": "en",
                "room_info": {
                    "title": "",
                    "describe": "",
                    "coin_num": 0,
                    "room_type": 0
                },
                "last_ai_reply": "September 21, 2025 9:52pm",
                "ai_reply_count": 1,
                "score": 1.5
            }
        ]
    }
}
	error:
		{
			"code":1
		}

4、获取单个直播间信息    后期会加其他字段
URL：/api/live/get_live_info
Method：get
Body:
	{	
		"uid": string 用户id
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"live_info":
							{
								room_id:string 房间id, 
								room_name:string 房间名称,
								uid:string 主播id,
								username:string 主播名,
								live_num int 直播间观看人数,
								character_name:string 角色名称，
								live_status:bool 开播状态，true是直播中,
								title:string,直播标题
								describe:string,直播描述
							},
					"vip_info":
							{
								room_type: int ,房间类型
								vip_status:bool ,是否有权限进入房间，true是有权限，是否付费过
								amount:int ,钻石数量，免费房间是0
							},
					"follow_info":
							{
								follow_status:bool ,是否关注，true是关注
							},
					"subscription_info":
							{
								
								subscription_status:bool ,是否有权限进入房间，true是有权限，订阅
								amount:int ,订阅钻石数量
							}
				   }
		}
	error:
		{
			"code":1
		}





5、获取当前直播间主播历史消息数据   
URL：/api/live/get_live_chat_history
Method：get
Body:
	{
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					uid:string 主播id,
					username:string 主播名,
					chat_info:
							{
								{
									is_user:bool, 是否是主播发送的消息 true是主播，false是ai
									live_message:string 消息内容
									sender_name:string , 发送者，用户内容的话，值是username。ai内容的话，值是character_name
									send_date:string ,发送时间
								},
								{
									is_user:bool, 是否是主播发送的消息 true是主播，false是ai
									live_message:string 消息内容
									sender_name:string , 发送者，用户内容的话，值是username。ai内容的话，值是character_name
									send_date:string ,发送时间
								},
							}

				   }
		}
	error:
		{
			"code":1
		}
		
		
6、获取当前直播间用户历史消息数据   只获取最后20条数据
URL：/api/live/get_user_chat_history
Method：get
Body:
	{
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					room_id:string,
					room_name:string,
					uid:string,  主播id
					username:string, 主播角色名称
					"chat_info":
							{uid:string 用户id,username:string 用户名,send_date:string 消息发送时间,user_message:string 消息内容},
							{uid:string 用户id,username:string 用户名,send_date:string 消息发送时间,user_message:string 消息内容},
				   }
		}
	error:
		{
			"code":1
		}
		
7、用户之间聊天数据保存接口
URL：/api/live/save_user_chat_history
Method：post
Body:
	{
		"room_id" : string
		"room_name" : string
		"username": string ，用户名，比如游客***
		"user_message": string
	}
Response:
	Success：
		{
			"code":0,

		}
	error:
		{
			"code":1
		}


8、房间vip支付接口
URL：/api/live/pay_vip_coin
Method：post
Body:
	{
		"uid" : string,
		"anchor_id": string
		"room_id":string
		"room_name" : string
		"amount":int
	}
Response:
	Success：
		{
			"code":0,

		}
	error:
		{
			"code":1
		}

充值接口
URL：/api/payment/process_recharge/
Method：post
Body:
{
  "user_id": 6,
  "crypto_amount": 20
}
Response:
	Success：
		{
{
    "code": 0,
    "message": "Recharge initiated, waiting for confirmation",
    "order_id": "e8e3297a-a363-48c3-83c7-d427a1eb76ee",
    "payment_id": "6422917718",
    "pay_address": "TVPw1vYm71owVoB6NXfV4AUxRcrHPbNB86",
    "pay_amount": 19.916393,
	"qr_code":""
}

		}
	error:
		{
			"code":1
		}


查询充值订单状态接口
URL：api/payment/check_payment_status/
Method：get
Body:
{
 请求示例 （直接拼到一起就可以）
 https://pecktra-dev.roturalabs.com/api/payment/check_payment_status/e8e3297a-a363-48c3-83c7-d427a1eb76ee
}
Response:
	Success：
		{
{
    "code": 0,
    "status": "waiting",
    "message": "Status retrieved"
}
		}
	error:
		{
			"code":1
		}


获取标签
URL：api/live/get_all_tags/
Method：get
Body:
{


}
Response:
	Success：
		{
{
    {
    "code": 0,
    "status": "success",
    "tags": [
        "Action",
        "Adventure",
        "Fantasy",
        "Female",
        "Game Characters",
        "Games",
        "Human",
        "Magic",
        "Police Officer",
        "Princess",
        "RPG",
        "Roleplay",
        "SFW",
        "Scenario",
        "Touhou",
        "anypov",
        "cn",
        "en",
        "muyo",
        "muyos touhou",
        "phantasmagoria of dim dream",
        "touhou pc-98",
        "touhou project"
    ]
}
}
		}
	error:
		{
			"code":1
		}
