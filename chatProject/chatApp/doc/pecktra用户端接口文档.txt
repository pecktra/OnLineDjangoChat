用户端：
1、用户是否登录
URL：/api/users/is_logged_in
Method：get
Body:
	{

	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"user_info":
							{
								uid:string,
								status: bool,登录为true
								uname:string,未登录返回 游客,
								coin_num:int 钻石数量，没有是0
							}
					
				   }
		}
	error:
		{
			"code":1
		}

2、退出登录
URL：/api/users/login_out
Method：get
Body:
	{

	}
Response:
	Success：
		{
			"code":0,
		}
	error:
		{
			"code":1
		}
		
3、获取正在直播的直播间列表
URL：/api/live/get_all_lives
Method：get
Body:
	{

	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"lives_info":
							{room_id:string 房间id,room_name:string 房间名称, uid:string 主播id,username:string 主播名,live_num int 直播间观看人数,character_name:string 角色名称,character_date:string 角色创建时间,"room_info":{"title":string,"coin_num":int,"room_type":int}},
							{room_id:string 房间id,room_name:string 房间名称, uid:string 主播id,username:string 主播名,live_num int 直播间观看人数,character_name:string 角色名称,character_date:string 角色创建时间,"room_info":{"title":string,"coin_num":int,"room_type":int}},
				   }
		}
	error:
		{
			"code":1
		}

4、获取单个直播间信息    后期会加其他字段
URL：/api/live/get_live_info
Method：get
Body:
	{	
		"uid": string 用户id
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					"live_info":
							{
								room_id:string 房间id, 
								room_name:string 房间名称,
								uid:string 主播id,
								username:string 主播名,
								live_num int 直播间观看人数,
								character_name:string 角色名称，
								live_status:bool 开播状态，true是直播中,
								title:string,直播标题
								describe:string,直播描述
							},
					"vip_info":
							{
								room_type: int ,房间类型
								vip_status:bool ,是否有权限进入房间，true是有权限，是否付费过
								amount:int ,钻石数量，免费房间是0
							},
					"follow_info":
							{
								follow_status:bool ,是否关注，true是关注
							},
					"subscription_info":
							{
								
								subscription_status:bool ,是否有权限进入房间，true是有权限，订阅
								amount:int ,订阅钻石数量
							}
				   }
		}
	error:
		{
			"code":1
		}





5、获取当前直播间主播历史消息数据   
URL：/api/live/get_live_chat_history
Method：get
Body:
	{
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					uid:string 主播id,
					username:string 主播名,
					chat_info:
							{
								{
									is_user:bool, 是否是主播发送的消息 true是主播，false是ai
									live_message:string 消息内容
									sender_name:string , 发送者，用户内容的话，值是username。ai内容的话，值是character_name
									send_date:string ,发送时间
								},
								{
									is_user:bool, 是否是主播发送的消息 true是主播，false是ai
									live_message:string 消息内容
									sender_name:string , 发送者，用户内容的话，值是username。ai内容的话，值是character_name
									send_date:string ,发送时间
								},
							}

				   }
		}
	error:
		{
			"code":1
		}
		
		
6、获取当前直播间用户历史消息数据   只获取最后20条数据
URL：/api/live/get_user_chat_history
Method：get
Body:
	{
		"room_id" : string
	}
Response:
	Success：
		{
			"code":0,
			"data":{
					room_id:string,
					room_name:string,
					uid:string,  主播id
					username:string, 主播角色名称
					"chat_info":
							{uid:string 用户id,username:string 用户名,send_date:string 消息发送时间,user_message:string 消息内容},
							{uid:string 用户id,username:string 用户名,send_date:string 消息发送时间,user_message:string 消息内容},
				   }
		}
	error:
		{
			"code":1
		}
		
7、用户之间聊天数据保存接口
URL：/api/live/save_user_chat_history
Method：post
Body:
	{
		"room_id" : string
		"room_name" : string
		"username": string ，用户名，比如游客***
		"user_message": string
	}
Response:
	Success：
		{
			"code":0,

		}
	error:
		{
			"code":1
		}


8、房间vip支付接口
URL：/api/live/pay_vip_coin
Method：post
Body:
	{
		"uid" : string,
		"anchor_id": string
		"room_id":string
		"room_name" : string
		"amount":int
	}
Response:
	Success：
		{
			"code":0,

		}
	error:
		{
			"code":1
		}

充值接口
URL：/api/payment/process_recharge/
Method：post
Body:
{
  "user_id": 6,
  "crypto_amount": 20
}
Response:
	Success：
		{
{
    "code": 0,
    "message": "Recharge initiated, waiting for confirmation",
    "order_id": "e8e3297a-a363-48c3-83c7-d427a1eb76ee",
    "payment_id": "6422917718",
    "pay_address": "TVPw1vYm71owVoB6NXfV4AUxRcrHPbNB86",
    "pay_amount": 19.916393,
	"qr_code":""
}

		}
	error:
		{
			"code":1
		}


查询充值订单状态接口
URL：api/payment/check_payment_status/
Method：get
Body:
{
 请求示例 （直接拼到一起就可以）
 https://pecktra-dev.roturalabs.com/api/payment/check_payment_status/e8e3297a-a363-48c3-83c7-d427a1eb76ee
}
Response:
	Success：
		{
{
    "code": 0,
    "status": "waiting",
    "message": "Status retrieved"
}
		}
	error:
		{
			"code":1
		}
