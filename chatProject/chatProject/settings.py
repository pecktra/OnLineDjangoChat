"""
Django settings for chatProject project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv

# 加载 .env 文件
load_dotenv()


build_universe_url = os.getenv('build_universe_url', '')  # 默认值可选

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z=0rcea*i34a_jg=lzm8p$z$%jb#!2juohv4f=u)_%lc-*an^1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]  # 开放访问权限


STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "templates/static"]
STATIC_ROOT = BASE_DIR / "staticfiles"
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',        # 添加通道应用
    'chatApp', # 添加聊天应用
    'corsheaders',#添加跨域
    'rest_framework',
    'rest_framework_simplejwt',
    'social_django',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',

    # 'whitenoise.middleware.WhiteNoiseMiddleware', #  不用nginx访问静态
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 启用压缩和缓存（可选）
# 不用nginx访问静态
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



ROOT_URLCONF = 'chatProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CORS_ALLOW_ALL_ORIGINS = True

WSGI_APPLICATION = 'chatProject.wsgi.application'
ASGI_APPLICATION = 'chatProject.asgi.application'  # 添加异步应用支持


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # MySQL 引擎
        'NAME': 'Pecktra',                        # 数据库名称
        'USER': 'root',                      # 用户名
        'PASSWORD': 'Tura1050493761@',              # 密码
        'HOST': 'localhost',                   # 主机地址
        'PORT': '3306',                        # 端口号
        'OPTIONS': {
            'charset': 'utf8mb4',              # 推荐使用 utf8mb4 以支持表情符号
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}

REDIS_HOST = 'localhost'
REDIS_PORT = 6379

# django-redis 配置
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{REDIS_HOST}:{REDIS_PORT}/0',  # Redis 连接字符串
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    },
    # session 缓存配置
    'session': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{REDIS_HOST}:{REDIS_PORT}/1',  # 使用相同的 Redis 实例
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    },
    'subscribe': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{REDIS_HOST}:{REDIS_PORT}/2',  # 使用相同的 Redis 实例
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    },
    'chat-limit': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{REDIS_HOST}:{REDIS_PORT}/3',  # 使用相同的 Redis 实例
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    }
}


MONGO_URI = "mongodb://admin:Tura1050493761%40@127.0.0.1:27017/chat_db?authSource=admin"
MONGO_DB_NAME = "chat_db"

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 指定用户模型
AUTH_USER_MODEL="chatApp.ChatUser"

# 设置登陆、登出页面
from django.urls import reverse_lazy
LOGIN_REDIRECT_URL = reverse_lazy('login')
LOGIN_URL = reverse_lazy('login')

# 用于图像上传
import os
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# 通道存储设置
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(f"redis://{REDIS_HOST}:{REDIS_PORT}/10")],  # Redis 地址
            "capacity": 1500,  # 默认 100，生产环境建议调大
            "expiry": 10,      # 消息过期时间（秒）
        },
    },
}
#JWT 相关的认证
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=360),  # 设置访问令牌的有效期（15分钟）
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),     # 设置刷新令牌的有效期（7天）
    'ROTATE_REFRESH_TOKENS': False,                   # 设置为 False 表示不使用自动刷新令牌
    'BLACKLIST_AFTER_ROTATION': False,                # 设置为 False 表示刷新令牌过期后不会加入黑名单
    'ALGORITHM': 'HS256',                             # 设置 JWT 使用的加密算法
    'SIGNING_KEY': 'your-secret-key',                 # 设置 JWT 签名密钥
}

# Google OAuth2 配置
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI")

# 使用数据库存储会话数据（默认）
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 7 * 24 * 60 * 60  # 会话有效期，单位为秒（1小时）
SESSION_COOKIE_NAME = 'sessionid'  # 默认 session cookie 名
SESSION_COOKIE_SECURE = True  # 只有在 HTTPS 请求中才会发送 session cookie
SESSION_COOKIE_HTTPONLY = True  # 确保 JavaScript 无法访问 session cookie
SESSION_COOKIE_SAMESITE = 'None'  # 配置 SameSite 属性，通常设置为 'Lax' 或 'Strict'
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 会话在浏览器关闭时过期（可以设置为 True）
CORS_ORIGIN_ALLOW_ALL = True  # 或者具体允许的域名


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # 其他认证后端...
]

#支付key
NOWPAYMENTS_API_KEY = os.getenv("NOWPAYMENTS_API_KEY")
NOWPAYMENTS_IPN_SECRET_KEY = os.getenv("NOWPAYMENTS_IPN_SECRET_KEY")
NOWPAYMENTS_IPN_CALLBACK_URL = os.getenv("NOWPAYMENTS_IPN_CALLBACK_URL")